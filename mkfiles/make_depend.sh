#!/bin/bash

# get variables from Make.inc
while read line
do
    line=`echo $line | sed -e 's/^\s*#.*//'`
	# check for comment?
    if [ "$line" != "" ]; then
		# check for +=
		pluseq=`echo $line | grep "+="` 
		if [ "$pluseq" != "" ]; then
	        var=`echo $line | sed -e 's/^\([a-zA-Z_0-9]*\)\s*+=.*/\1/'`
        	val=`echo $line | sed -e 's/[a-zA-Z_0-9]*\s*+=\(.*\)/\1/'`
	        val=`echo $val | sed -e 's/\$(\([a-zA-Z_0-9]*\))/\${\1}/g'`
			eval ${var}=\"\$\{${var}\} ${val}\"
		else
    	    var=`echo $line | sed -e 's/^\([a-zA-Z_0-9]*\)\s*=.*/\1/'`
    	    val=`echo $line | sed -e 's/[a-zA-Z_0-9]*\s*=\(.*\)/\1/'`
	        val=`echo $val | sed -e 's/\$(\([a-zA-Z_0-9]*\))/\${\1}/g'`
	        eval ${var}=\"${val}\"
		fi
    fi
done < Make.inc


# create tdkp dependency file
TARGET=$1
BINDIR="bin"
SRCDIR=""
CPP=$CXX

# get command line arguments
s=0
for f in $@
do
  if [ $s == 0 ]; then
    s=1
  else
    SRCDIR="${SRCDIR} $f"
  fi
done

# temporary file
if [ -e .tdkpdep ]; then
  rm .tdkpdep
  touch .tdkpdep
fi

# assemble dependency. note: -D... must be included in CXX_INC
INCDIR=$CXX_INC
SRCFILES=`find $SRCDIR -name "*.cpp"`
OBJFILES=""
echo "CPP=$CPP"
echo "CXX_FLAGS=$CXX_FLAGS"
echo "INCDIR=$INCDIR"
for f in $SRCFILES
do
    echo "creating dependencies for $f"
    t=`basename $f | sed -e 's/cpp/o/'`
    $CPP -MG -MT $BINDIR/$t -MM $f $INCDIR >> .tdkpdep
    echo -e "\t\$(CXX) \$(CXX_FLAGS) \$(CXX_INC) -o \$@ -c \$<" >> .tdkpdep
    echo "" >> .tdkpdep
    OBJFILES="${OBJFILES} ${BINDIR}/$t"
done

# find all header files
HEADS=`find $SRCDIR -name "*.h" -exec echo {} \;`
HEADERS=""
for f in $HEADS
do
  HEADERS="${HEADERS} $f"
done
for f in `find $SRCDIR -name "*.tcc" -exec echo {} \;`
do
  HEADERS="${HEADERS} $f"
done
rm -vf $TARGET
echo "# --- auto generated by make_depend.sh --- " > $TARGET
echo -n "#" >> $TARGET
date >> $TARGET
echo "OBJS = $OBJFILES" >> $TARGET
echo "" >> $TARGET
echo "HEADERS = $HEADERS" >> $TARGET
echo "" >> $TARGET
cat .tdkpdep >> $TARGET
rm .tdkpdep
