#!/bin/bash

# get variables from Make.inc
while read line
do
    line=`echo $line | sed -e 's/^\s*#.*//'`
    if [ "$line" != "" ]; then
        var=`echo $line | sed -e 's/^\([a-zA-Z_0-9]*\)\s*=.*/\1/'`
        val=`echo $line | sed -e 's/[a-zA-Z_0-9]*\s*=\(.*\)/\1/'`
        val=`echo $val | sed -e 's/\$(\([a-zA-Z_0-9]*\))/\${\1}/g'`
        eval ${var}=\"${val}\"
    fi
done < Make.inc

# create tdkp dependency file
TARGET=$1
BINDIR="bin"
SRCDIR=""

# get command line arguments
s=0
for f in $@
do
  if [ $s == 0 ]; then
    s=1
  else
    SRCDIR="${SRCDIR} $f"
  fi  
done

# temporary file
if [ -e .tdkpdep ]; then
  rm .tdkpdep
  touch .tdkpdep
fi

# please note that all include dirs can be specified regardless of which linear solvers are actually included
# also note that $DEFINES is also set because headers might or might not be included according to preprocessor flags
INCDIR="$UMFPACK_INC $ILS_INC $PARDISO_INC $SUPERLU_INC $DFISE_INC $ZLIB_INC $BOOST_INC $FLENS_INC $TCL_INC $LINALG_INC $GCC_INC"
SRCFILES=`find $SRCDIR -name "*.cpp"`
OBJFILES=""
for f in $SRCFILES
do
    echo "creating dependencies for $f"
    t=`basename $f | sed -e 's/cpp/o/'`
    $CXX -MG -MT $BINDIR/$t -MM $f $INCDIR $DEFINES >> .tdkpdep
    echo -e "\t\$(CXX) \$(CXX_FLAGS) \$(CXX_INC) -o \$@ -c \$<" >> .tdkpdep
    echo "" >> .tdkpdep
    OBJFILES="${OBJFILES} ${BINDIR}/$t"
done

# find all header files
HEADS=`find $SRCDIR -name "*.h" -exec echo {} \;`
HEADERS=""
for f in $HEADS
do
  HEADERS="${HEADERS} $f"
done
for f in `find $SRCDIR -name "*.tcc" -exec echo {} \;`
do
  HEADERS="${HEADERS} $f"
done
rm -vf $TARGET
echo "# --- auto generated by make_depend.sh --- " > $TARGET
echo -n "#" >> $TARGET
date >> $TARGET
echo "OBJS = $OBJFILES" >> $TARGET
echo "" >> $TARGET
echo "HEADERS = $HEADERS" >> $TARGET
echo "" >> $TARGET
cat .tdkpdep >> $TARGET
rm .tdkpdep
